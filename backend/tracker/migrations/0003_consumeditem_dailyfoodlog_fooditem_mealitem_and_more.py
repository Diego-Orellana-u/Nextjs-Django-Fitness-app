# Generated by Django 5.2 on 2025-04-30 00:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0002_remove_customuser_date_joined_customuser_created_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsumedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_quantity', models.DecimalField(decimal_places=2, max_digits=7)),
                ('serving_unit', models.CharField(choices=[('g', 'Grams'), ('ml', 'Milliliters'), ('piece', 'Piece'), ('cup', 'Cup'), ('tbsp', 'Tablespoon')], max_length=10)),
                ('time_of_day', models.CharField(choices=[('B', 'Breakfast'), ('L', 'Lunch'), ('D', 'Dinner'), ('S', 'Snack')], max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('calories_consumed', models.DecimalField(decimal_places=2, max_digits=7)),
                ('carbs_consumed', models.DecimalField(decimal_places=2, max_digits=7)),
                ('proteins_consumed', models.DecimalField(decimal_places=2, max_digits=7)),
                ('fats_consumed', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='DailyFoodLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('brand', models.CharField(blank=True, db_index=True, max_length=150, null=True)),
                ('off_barcode', models.CharField(blank=True, help_text='Unique barcode from Open Food Facts', max_length=50, null=True, unique=True)),
                ('calories_per_100g', models.DecimalField(decimal_places=2, help_text='Calories per 100g', max_digits=7)),
                ('protein_per_100g', models.DecimalField(decimal_places=2, help_text='Protein (g) per 100g', max_digits=7)),
                ('carbs_per_100g', models.DecimalField(decimal_places=2, help_text='Carbohydrates (g) per 100g', max_digits=7)),
                ('fat_per_100g', models.DecimalField(decimal_places=2, help_text='Fat (g) per 100g', max_digits=7)),
                ('common_serving_size_unit', models.CharField(blank=True, choices=[('g', 'Grams'), ('ml', 'Milliliters'), ('piece', 'Piece'), ('cup', 'Cup'), ('tbsp', 'Tablespoon')], help_text="e.g., 'cup', 'slice'", max_length=10, null=True)),
                ('common_serving_size_grams', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in grams for the common serving size (if applicable)', max_digits=7, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MealItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_quantity', models.DecimalField(decimal_places=2, max_digits=7)),
                ('serving_unit', models.CharField(choices=[('g', 'Grams'), ('ml', 'Milliliters'), ('piece', 'Piece'), ('cup', 'Cup'), ('tbsp', 'Tablespoon')], max_length=10)),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tracker.fooditem')),
            ],
        ),
        migrations.CreateModel(
            name='MealTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('time_of_day', models.CharField(choices=[('B', 'Breakfast'), ('L', 'Lunch'), ('D', 'Dinner'), ('S', 'Snack')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='NutritionGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('target_calories', models.PositiveIntegerField()),
                ('target_carbs', models.PositiveIntegerField()),
                ('target_proteins', models.PositiveIntegerField()),
                ('target_fats', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('height', models.DecimalField(decimal_places=2, max_digits=3)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
        ),
        migrations.DeleteModel(
            name='MacroPlan',
        ),
        migrations.AlterField(
            model_name='customuser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AddField(
            model_name='dailyfoodlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='consumeditem',
            name='log',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.dailyfoodlog'),
        ),
        migrations.AddField(
            model_name='consumeditem',
            name='food_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tracker.fooditem'),
        ),
        migrations.AddField(
            model_name='mealtemplate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mealitem',
            name='meal_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.mealtemplate'),
        ),
        migrations.AddField(
            model_name='nutritiongoal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='dailyfoodlog',
            unique_together={('user', 'date')},
        ),
    ]
